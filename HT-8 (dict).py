# НТ_8_1 Создайте словарь person, в котором будут ключи name, age, city. Выведите значение возраста.

# person = {'name': input('Введите имя: ').capitalize(), 'age': int(input('Введите полное количество лет: ')),
#           'city': input('Введите город, в котором живёте: ').capitalize()}
# print(person)
# print(f'Возраст составляет {person["age"]} лет')

# НТ_8_2 Программа принимает список из трех слов. Создать словарь, в котором ключ – слово,
# значение – количество символов в слове.
#
# ls = input('Введите три слова: ').split()
# print(ls)
# dic = {i: len(i) for i in ls}
# print(dic)

# НТ_8_3 На вход подается список чисел. Создать словарь, в котором ключ – число, значение – число на 10% больше.
# Значение должно  быть округленное.

# nums = input('Введите несколько чисел: ').split()
# dic = {int(i): round(int(i) + (int(i) * 0.1)) for i in nums}
# print(dic)

# НТ_8_4 Создайте следующий словарь: ключи – BMW, Tesla; значения – список из трех моделей.
# Выведите первое и последнее значения каждого из ключей.
# вариант 1
# auto = {'BMW': ['i8', 'm8', 'x7'], 'Tesla': ['Roadster', 'Semi', 'Cybertruck']}
# print(auto['BMW'][0::2], auto['Tesla'][0::2])
#
# вариант 2
# auto = {'BMW': ['i8', 'm8', 'x7'], 'Tesla': ['Roadster', 'Semi', 'Cybertruck']}
# print(auto['BMW'][0], auto['BMW'][2])
# print(auto['Tesla'][0], auto['Tesla'][2])
#
# вариант 3
# auto = ['BMW', 'Tesla']
# models = (['i8', 'm8', 'x7'], ['Roadster', 'Semi', 'Cybertruck'])
# dic = dict(zip(auto, models))
# print(dic)
# print(dic['BMW'][0], dic['BMW'][2])
# print(dic['Tesla'][0], dic['Tesla'][2])

# НТ_8_5 Написать задачу со словарем. Задача должна содержать условие и решение.
# Программа принимает список чисел. Создать словарь, в котором каждый элемент списка является и ключом и значением,
# при этом тип ключей должен быть целым числом, а тип значений - дробное число.
# В конец словаря добавить числовой ключ '0' со значением 'конец словаря'.
#
# nums = [int(i) for i in input('Введите целые числа больше ноля: ').split()]
# dic = {i: float(i) for i in nums}
# dic[0] = 'конец словаря'
# print(dic)

# НТ_8_6 Создать словарь, который в качестве ключа будет использовать страну, а в качестве значения – ее столицу.
# Внеси в него следующие страны: Россия (Москва), Украина (Киев), Италия ('Рим), Испания (Мадрид), Болгария (София).
# Программа должна запрашивать у пользователя, столицу какой страны он хочет узнать и выдавать результат.
#
# country = ['Россия', 'Украина', 'Италия', 'Испания', 'Болгария']
# capital = ['Москва', 'Киев', 'Рим', 'Мадрид', 'София']
# dic = dict(zip(country, capital))
# print(dic)
# country_capital = input('Введите наименование страны: ').capitalize()
# print(f'Страна {country_capital}: столица {dic[country_capital]}.')

# НТ_8_7 Создать словарь, ключи – числа, значения – слова. Удалить из него все пары с нечетными ключами.
# Вывести на печать. В этом вам может помочь статья, что сбрасывала ранее.
#
# dic = {1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine', 10: 'ten'}
# print(dic)
#
# for k in list(dic.keys()):
#     if k % 2 != 0:
#         del dic[k]
# print(dic)

# НТ_8_8 Написать задачу со словарем и циклом. Представление: условие и решение.
# Магазин предоставляет скидки на сумму покупок в одном чеке. Чем больше сумма, тем больше скидка.
# Программа на вход получает два списка: размеры (%) скидок и соответствующие суммы перехода к большему размеру
# скидки. Программа из двух списков создает словарь, где ключ - скидки, значение - сумма, и
# выводит сумму скидок и сумму к оплате.
#
# discounts = input('Введите размеры скидок, %: ').split()
# discounts_amount = input('Введите границы сумм для перехода к более высокому % скидки: ').split()
# a = float(input('Введите полную сумму покупок в чеке: '))
# dic = dict(zip(discounts_amount, discounts))
# print(dic)
# ls_disc = []
#
# for k, v in dic.items():
#     k = int(k)
#     v = int(v)
#     if k <= a:
#         ls_disc.append(a * int(v) / 100)
# print(f'Сумма скидки составит: {round(max(ls_disc), 2)} рублей, к оплате: {a - round(max(ls_disc), 2)} рублей.')


